{"ast":null,"code":"var _jsxFileName = \"/Users/cpower7/Desktop/updated_handshake/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState('');\n  const [formData, setFormData] = useState({\n    text: ''\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios.get(\"http://localhost:4000/api/actionChirps\").then(res => setData(res.data)).catch(err => console.log(err));\n    };\n\n    fetchData();\n  }, [data]);\n\n  const sendChirp = () => {\n    axios.post(\"http://localhost:4000/api/actionChirps/addChirp\", {\n      text: formData.toUpperCase()\n    }).then(res => console.log('Data sent')).catch(err => console.log(err));\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    sendChirp();\n  };\n\n  const handleChange = event => {\n    setFormData(event.target.value);\n  };\n\n  const upVote = async id => {\n    console.log(\"the id: \", id);\n    await axios.post(\"http://localhost:4000/api/actionChirps/upVote\", {\n      id: id\n    }).then(res => console.log('ID sent')).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello Handhsake!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This is the assessment using the MERN stack!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Chirps \\uD83E\\uDD89\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Enter chirp here! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.text,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"chirps\",\n      children: data ? data.map(chirp => /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          height: '10rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: [\"Tweet ID: \", chirp.id, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"Text: \", chirp.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => upVote(chirp.id),\n            children: [\"Upvote: \", chirp.upvote]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"r22PjqP87803zQl8mTmGiZium/E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/cpower7/Desktop/updated_handshake/client/src/App.js"],"names":["React","useEffect","useState","Jumbotron","Button","Card","axios","App","data","setData","formData","setFormData","text","fetchData","get","then","res","catch","err","console","log","sendChirp","post","toUpperCase","handleSubmit","event","preventDefault","handleChange","target","value","upVote","id","map","chirp","height","upvote"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AACvCU,IAAAA,IAAI,EAAE;AADiC,GAAD,CAAxC;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAG,YAAY;AACxB,YAAMP,KAAK,CAACQ,GAAN,CAAU,wCAAV,EACLC,IADK,CACAC,GAAG,IAAIP,OAAO,CAACO,GAAG,CAACR,IAAL,CADd,EAELS,KAFK,CAECC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFR,CAAN;AAGL,KAJD;;AAKAL,IAAAA,SAAS;AACV,GAPQ,EAON,CAACL,IAAD,CAPM,CAAT;;AASA,QAAMa,SAAS,GAAG,MAAM;AACtBf,IAAAA,KAAK,CAACgB,IAAN,CAAW,iDAAX,EAA8D;AAC5DV,MAAAA,IAAI,EAAEF,QAAQ,CAACa,WAAT;AADsD,KAA9D,EAGCR,IAHD,CAGMC,GAAG,IAAIG,OAAO,CAACC,GAAR,CAAY,WAAZ,CAHb,EAICH,KAJD,CAIOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJd;AAKD,GAND;;AAOA,QAAMM,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,SAAS;AACV,GAHD;;AAKA,QAAMM,YAAY,GAAIF,KAAD,IAAW;AAC9Bd,IAAAA,WAAW,CAACc,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAOC,EAAP,IAAc;AAC3BZ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBW,EAAxB;AACA,UAAMzB,KAAK,CAACgB,IAAN,CAAW,+CAAX,EAA4D;AAChES,MAAAA,EAAE,EAAEA;AAD4D,KAA5D,EAGLhB,IAHK,CAGAC,GAAG,IAAIG,OAAO,CAACC,GAAR,CAAY,SAAZ,CAHP,EAILH,KAJK,CAICC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJR,CAAN;AAKD,GAPD;;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,6BACA;AAAM,QAAA,QAAQ,EAAEM,YAAhB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEd,QAAQ,CAACE,IAAnC;AAAyC,UAAA,QAAQ,EAAEe;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YATF,eAgBE;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA,gBACCnB,IAAI,GAAGA,IAAI,CAACwB,GAAL,CAASC,KAAK,iBAClB,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAb;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA,qCAAuBD,KAAK,CAACF,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,iCACSE,KAAK,CAACrB,IADf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,OAAO,EAAE,MAAMkB,MAAM,CAACG,KAAK,CAACF,EAAP,CAA/C;AAAA,mCAAoEE,KAAK,CAACE,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADI,CAAH,gBAUH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAxEQ5B,G;;KAAAA,G;AA0ET,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState} from 'react'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport axios from 'axios'\n\nfunction App() {\n  const [data, setData] = useState('');\n  const [formData, setFormData] = useState({\n    text: '', \n  })\n  useEffect(() => {\n    const fetchData = async () => {\n          await axios.get(\"http://localhost:4000/api/actionChirps\")\n          .then(res => setData(res.data))\n          .catch(err => console.log(err))\n    }\n    fetchData();\n  }, [data]);\n\n  const sendChirp = () => {\n    axios.post(\"http://localhost:4000/api/actionChirps/addChirp\", {\n      text: formData.toUpperCase(), \n    })\n    .then(res => console.log('Data sent'))\n    .catch(err => console.log(err))\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    sendChirp()\n  }\n\n  const handleChange = (event) => {\n    setFormData(event.target.value)\n  }\n\n  const upVote = async (id) => {\n    console.log(\"the id: \", id); \n    await axios.post(\"http://localhost:4000/api/actionChirps/upVote\", {\n      id: id, \n    })\n    .then(res => console.log('ID sent'))\n    .catch(err => console.log(err))\n  }\n\n  return (\n    <div className=\"App\">\n      <Jumbotron>\n        <h1>Hello Handhsake!</h1>\n        <p>\n          This is the assessment using the MERN stack!\n        </p>\n      </Jumbotron>\n      <br/>\n      <h3>Chirps 🦉</h3>\n      <div>\n      <form onSubmit={handleSubmit}>\n        <h3> Enter chirp here! </h3>\n        <input type=\"text\" value={formData.text} onChange={handleChange}></input>\n        <input type=\"submit\" value=\"Send\" ></input>\n      </form>\n      </div> \n      <ul class=\"chirps\">\n      {data ? data.map(chirp => \n          <Card style={{height: '10rem'}}>\n            <Card.Body>\n              <Card.Title>Tweet ID: {chirp.id} </Card.Title>\n              <Card.Text>\n                Text: {chirp.text}\n              </Card.Text>\n              <Button variant=\"success\" onClick={() => upVote(chirp.id)}>Upvote: {chirp.upvote}</Button>\n            </Card.Body>\n          </Card>\n      ):<li>Loading...</li>}\n      </ul>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}